#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Oct  9 14:25:05 2019

@author: swanliz98
"""

import random #we left this outside of the function because if we declare it in the largest scope, it will
              #continue to be true/applicable inside the function scope when random is utilized.

def dicegame(numsim): #our fuction takes as its input the number of simulations we want to run
    averagewon = 0
    gamewinnings = 0
    winningslist = []
    maxwon = 0
    countzeros = 0
    while numsim > 0:
        numsim -= 1
        roll = random.randint(1,6) #the initial roll
        if roll < 4:
            gamewinnings += 0
        else:
            while roll > 3:
                if roll == 4:
                    gamewinnings += roll
                elif roll == 5:
                    gamewinnings += roll
                elif roll == 6:
                    gamewinnings += roll
                roll = random.randint(1,6) #the rolls following (and continuing the game)
        winningslist.append(gamewinnings)
        
        if gamewinnings == 0: ###    this section of code was a check/addition to     ###
            countzeros += 1   ### test the amount of times a three or less was rolled ###
        
        gamewinnings = 0
    averagewon = sum(winningslist) / len(winningslist)
    percentagezero = countzeros/len(winningslist)*100 #this line calculates the percentage based off the countzeros above
    if winningslist != []:
        maxwon = max(winningslist)
    #print(winningslist[0:10]) <-- our check to make sure the code was running correctly
    print(f"Average amount won = ${averagewon:0.2f}, max amount won per game = ${maxwon}, number of times at zero = {countzeros} or {percentagezero:0.2f}% of the time.")
    return (averagewon, maxwon, countzeros, percentagezero)
dicegame(10000)

'''
======= [isaac] =======
For $3 a game, I would play. When running the simulation, the average amount you win
is usually close to 5. This being said, you still have good odds of making a profit of at least
$2 on average per game. Additionally, the max won that I received was close to $70, 
which is a great best case outcome for a $3 buy-in.
=======================

======== [liz] ========
Initially it's a risky gamble. With 6 chances on the first roll only half of them win and the average
amount of money is 2.50 (the sum of 0,0,0,4,5,6 is 15... divided by 6 is 2.5) so you're immediately
thinking that you will on average lose 50 cents a game. However it's the fact that you get to keep
playing after a 4, 5, and 6 roll that make it worth playing. After running 10,000 simulations of the game
even though you still end up with zero 50% of the time, the average amount won increases to $5 - this is
due to the fact that your ability to keep winning is the same ability that sweetens the pot each time.
=======================


'''
